#include <Arduino.h>
#include <TFT_eSPI.h>
#include <SPI.h>

TFT_eSPI tft = TFT_eSPI();

// Calibration storage
uint16_t calData[5];

// Slide management
int currentSlide = 0;
const int totalSlides = 3;
bool slideChanged = true;

// 16x16 test bitmaps (RGB565)
const uint16_t bitmap1[16 * 16] PROGMEM = {
  // Red square
  0xF800, 0xF800, 0xF800, 0xF800, 0xF800, 0xF800, 0xF800, 0xF800,
  0xF800, 0xF800, 0xF800, 0xF800, 0xF800, 0xF800, 0xF800, 0xF800,
  // repeat 16 times total (simplified below)
};
const uint16_t bitmap2[16 * 16] PROGMEM = {
  // Blue square
  0x001F, 0x001F, 0x001F, 0x001F, 0x001F, 0x001F, 0x001F, 0x001F,
  0x001F, 0x001F, 0x001F, 0x001F, 0x001F, 0x001F, 0x001F, 0x001F,
  // repeat
};
const uint16_t bitmap3[16 * 16] PROGMEM = {
  // Green checkerboard
  0x07E0, 0x0000, 0x07E0, 0x0000, 0x07E0, 0x0000, 0x07E0, 0x0000,
  0x0000, 0x07E0, 0x0000, 0x07E0, 0x0000, 0x07E0, 0x0000, 0x07E0,
  // repeat
};

void calibrateTouch() {
  tft.fillScreen(TFT_BLACK);
  tft.setTextColor(TFT_WHITE, TFT_BLACK);
  tft.setCursor(20, 20);
  tft.println("Touch Calibration...");
  tft.calibrateTouch(calData, TFT_WHITE, TFT_BLACK, 15);
  tft.setTouch(calData);
}

void NextSlide() {
  currentSlide++;
  if (currentSlide >= totalSlides) currentSlide = 0;
  slideChanged = true;
  Serial.printf("Switching to slide: %d\n", currentSlide + 1);
}

void DisplayScaledBitmap(const uint16_t* bitmap, int x, int y, int w, int h, int scale) {
  for (int j = 0; j < h; j++) {
    for (int i = 0; i < w; i++) {
      uint16_t pixel = pgm_read_word(&bitmap[j * w + i]);
      for (int sy = 0; sy < scale; sy++) {
        for (int sx = 0; sx < scale; sx++) {
          tft.drawPixel(x + (i * scale) + sx, y + (j * scale) + sy, pixel);
        }
      }
    }
  }
}

void DisplayCurrentSlide() {
  tft.fillScreen(TFT_BLACK);

  // Slide number
  tft.setTextColor(TFT_WHITE, TFT_BLACK);
  tft.setTextSize(2);
  tft.setCursor(10, 10);
  tft.printf("Slide %d of %d", currentSlide + 1, totalSlides);

  const uint16_t* bmp = bitmap1;
  String title = "Default";

  switch (currentSlide) {
    case 0: bmp = bitmap1; title = "Robot Face"; break;
    case 1: bmp = bitmap2; title = "Blue Gradient"; break;
    case 2: bmp = bitmap3; title = "Checkerboard"; break;
  }

  // Title
  tft.setCursor(10, 40);
  tft.setTextSize(2);
  tft.println(title);

  // Bitmap
  DisplayScaledBitmap(bmp, 100, 80, 16, 16, 8);

  // Instructions
  tft.setTextColor(TFT_YELLOW, TFT_BLACK);
  tft.setCursor(10, 220);
  tft.println("Touch screen to change slide");
}

void setup() {
  Serial.begin(115200);
  tft.init();
  tft.setRotation(2);
  calibrateTouch();
  DisplayCurrentSlide();
  slideChanged = false;
}

void loop() {
  uint16_t x, y;
  if (tft.getTouch(&x, &y)) {
    NextSlide();
    while (tft.getTouch(&x, &y)) delay(10); // wait for release
  }

  if (slideChanged) {
    DisplayCurrentSlide();
    slideChanged = false;
  }
}
